# === IMPORTS ESSENCIAIS ===
import time
import pandas as pd
from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.common.by import By
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from webdriver_manager.chrome import ChromeDriverManager
import os

# === CONFIGURA√á√ïES DO CHROME PARA USO LOCAL ===
chrome_options = Options()
chrome_options.add_argument("--start-maximized")  # Abre o navegador maximizado
# chrome_options.add_argument("--headless")  # Descomente se quiser rodar sem abrir o navegador

# === INICIAR O DRIVER ===
service = Service(ChromeDriverManager().install())
driver = webdriver.Chrome(service=service, options=chrome_options)

# === DADOS DE LOGIN ===
url_login = "https://login.qualiex.com/oauth2/authorize?client_id=132fd610-1947-4827-8414-47b07b355c45&redirect_uri=https:%2F%2Fapps3.qualiex.com%2Fcallback&response_type=token%20id_token&scope=openid%20profile%20email&state=Lw%3D%3D"
email = "smlima@bundyrefrigeration.com"
senha = "123@S0l0nqua"

# === ACESSO AO SISTEMA ===
print("Acessando o sistema...")
driver.get(url_login)

WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.NAME, "email")))
print("Sistema acessado... Seguindo para Login...")

# === LOGIN COM EMAIL===
print("Fazendo login...")
driver.find_element(By.NAME, "email").send_keys(email)
print("Email Colocado...")

botao_next = WebDriverWait(driver, 10).until(
    EC.element_to_be_clickable((By.XPATH, "//button[contains(., 'Next') or contains(., 'Pr√≥ximo') or @type='submit']"))
)
botao_next.click()
print("Email inserido e bot√£o 'Next' clicado. Seguindo para a senha...")

# === LOGIN COM SENHA ===
WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.NAME, "password")))
driver.find_element(By.NAME, "password").send_keys(senha)
print("Senha tamb√©m inserida!")

botao_signin = WebDriverWait(driver, 10).until(
    EC.element_to_be_clickable((By.XPATH, "//button[.//span[text()='Entrar']]"))
)
print("‚úî Bot√£o 'Sign In' encontrado. Clicando...")
url_antes = driver.current_url
driver.execute_script("arguments[0].click();", botao_signin)

time.sleep(5)

html = driver.page_source
if "invalid" in html.lower() or "erro" in html.lower():
    print("‚ö†Ô∏è Erro detectado na p√°gina.")
else:
    print("‚úÖ Nenhuma mensagem de erro vis√≠vel detectada ap√≥s login.")

try:
    WebDriverWait(driver, 10).until(lambda d: d.current_url != url_antes)
    print("‚úî A URL mudou para:", driver.current_url)
except:
    print("‚ùå A URL n√£o mudou. Login pode ter falhado.")

time.sleep(5)
print("üåê URL atual ap√≥s login:", driver.current_url)

# indo p staff
print("Indo para √°rea Staff...")
driver.get("https://apps1.qualiex.com/staff")
time.sleep(10)

# CARREGANDO PLANILHA
print("Carregando dados da planilha...")
df = pd.read_excel(r'C:\\Users\\smlima\\Desktop\\relatorio_colaboradores.24.07.2025-13.34.xlsx')

# PROCESSO DE BUSCA E EDICAO DE CADA COLABORADOR
for index, row in df.iterrows():
    nome = row['Colaborador']
    funcao = row['Funcao']

    print(f"\nBuscando: {nome}")

    try:
        print("‚Üí Verificando campo de busca...")
        campo_busca = WebDriverWait(driver, 10).until(
            EC.presence_of_element_located((By.NAME, "txtSearch-inputEl"))
        )
        campo_busca.clear()
        campo_busca.send_keys(nome)
        print("‚úî Nome digitado:", nome)

        botao_lupa = WebDriverWait(driver, 10).until(
            EC.element_to_be_clickable((By.ID, "btnSearch-btnIconEl"))
        )
        driver.execute_script("arguments[0].click();", botao_lupa)
        print(f"‚úî Buscando perfil de '{nome}'")

        time.sleep(5)

    except Exception as e:
        print(f"‚ùå Erro ao buscar o colaborador '{nome}': {e}")
