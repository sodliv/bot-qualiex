# imports de blibliotecas e suas funcoes essenciais
# = do selenium pra automatizacao, do pandas pra importacao de dados da planilha, e do webdriver do chrome pro acesso a ele)
import time
import pandas as pd
import pyautogui
import keyboard as k
from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.common.by import By
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from webdriver_manager.chrome import ChromeDriverManager
import os

# config chrome (o abre maximizado)
chrome_options = Options()
chrome_options.add_argument("--start-maximized")  # Abre o navegador maximizado
# chrome_options.add_argument("--headless") = add esta linha se quiser que o processo seja hide

# inicia driver chrome
service = Service(ChromeDriverManager().install())
driver = webdriver.Chrome(service=service, options=chrome_options)

# variavel pros dados de login
url_login = "https://login.qualiex.com/oauth2/authorize?client_id=132fd610-1947-4827-8414-47b07b355c45&redirect_uri=https:%2F%2Fapps3.qualiex.com%2Fcallback&response_type=token%20id_token&scope=openid%20profile%20email&state=Lw%3D%3D"
email = "smlima@bundyrefrigeration.com"
senha = "123@S0l0nqua"

###################################################################################################################################################

# acessa o url do sistema qualiex
print("Acessando o sistema...")
driver.get(url_login)

WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.NAME, "email")))
print("Sistema acessado... Seguindo para Login...")

# bota email
print("Fazendo login...")
driver.find_element(By.NAME, "email").send_keys(email)
print("Email Colocado...")

botao_next = WebDriverWait(driver, 10).until(
    EC.element_to_be_clickable((By.XPATH, "//button[contains(., 'Next') or contains(., 'Pr√≥ximo') or @type='submit']"))
)
botao_next.click()
print("Email inserido e bot√£o 'Next' clicado. Seguindo para a senha...")

# bColoca a senha
WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.NAME, "password")))
driver.find_element(By.NAME, "password").send_keys(senha)
print("Senha tamb√©m inserida!")

botao_signin = WebDriverWait(driver, 10).until(
    EC.element_to_be_clickable((By.XPATH, "//button[.//span[text()='Entrar']]"))
)
print("‚úî Bot√£o 'Sign In' encontrado. Clicando...")
url_antes = driver.current_url
driver.execute_script("arguments[0].click();", botao_signin)

time.sleep(5)

html = driver.page_source
if "invalid" in html.lower() or "erro" in html.lower():
    print("‚ö†Ô∏è Erro detectado na p√°gina.")
else:
    print("‚úÖ Nenhuma mensagem de erro vis√≠vel detectada ap√≥s login.")

try:
    WebDriverWait(driver, 5).until(lambda d: d.current_url != url_antes)
    print("‚úî A URL mudou para:", driver.current_url)
except:
    print("‚ùå A URL n√£o mudou. Login pode ter falhado.")

time.sleep(5)
print("üåê URL atual ap√≥s login:", driver.current_url)

# indo p staff
print("Indo para √°rea Staff...")
driver.get("https://apps1.qualiex.com/staff")
time.sleep(5)

###################################################################################################################################################

# exporta os dados da planilha selecionada
print("Carregando dados da planilha...")
df = pd.read_excel(r'C:\\Users\\smlima\\Desktop\\Colaboradores - Integracao.xlsx')

# busca na planilha pelos titulos de coluna requeridos e por seu respectivo conteudo em loop
# busca na planilha pelos titulos de coluna requeridos e por seu respectivo conteudo em loop
for index, row in df.iterrows():
    nome = row['Colaborador']
    treinamento = row['Treinamento']
    data = row['Data']
    local = row['Local']
    horario = row['Horario']

    print(f"\nBuscando: {nome}")

    try:
        print("‚Üí Verificando campo de busca...")
        campo_busca = WebDriverWait(driver, 5).until(
            EC.presence_of_element_located((By.NAME, "txtSearch-inputEl"))
        )
        campo_busca.clear()
        campo_busca.send_keys(nome)
        print(f"‚úî Nome '{nome}' digitado na busca.")

        botao_lupa = WebDriverWait(driver, 5).until(
            EC.element_to_be_clickable((By.ID, "btnSearch-btnIconEl"))
        )
        driver.execute_script("arguments[0].click();", botao_lupa)
        print(f"‚úî Buscando perfil de '{nome}'...")

        time.sleep(5)

        # clicando no nome do sujeito
        x, y = 412, 305
        selecao = pyautogui.click(x, y)
        time.sleep(5)
        print(f"‚úî Colaborador '{nome}' selecionado com sucesso!")

        # Agora, continua o processo de edi√ß√£o ap√≥s a sele√ß√£o ser conclu√≠da
        botao_editar_colaborador = WebDriverWait(driver, 5).until(
            EC.element_to_be_clickable((By.ID, "btnEdit-btnIconEl"))
        )
        driver.execute_script("arguments[0].click();", botao_editar_colaborador)
        print(f"‚úî Editando perfil de '{nome}'")
        time.sleep(5)

        # Agora, vai p aba treinamento
        botao_avancar = WebDriverWait(driver, 5).until(
            EC.element_to_be_clickable((By.ID, "btnSaveUser-btnInnerEl"))
        )
        driver.execute_script("arguments[0].click();", botao_avancar)
        time.sleep(1)
        
        a, b = 428, 3123
        add_treinamento = pyautogui.click(a, b)
        time.sleep(2)
        k.press_and_release('delete')
        time.sleep(1)
        k.write(treinamento)
        k.press('Tab')
        k.write(local)
        k.press('Tab')
        k.write(data)
        k.press('Tab')
        k.write(data)
        k.press('Tab')
        k.write(horario)

        print(f"‚úî Cargo de '{treinamento}' colocado para {nome} com sucesso!")

        # agr avan√ßa e salva
        
        botao_avancar = WebDriverWait(driver, 5).until(
            EC.element_to_be_clickable((By.ID, "btnSaveUser-btnInnerEl"))
        )
        for i in range(3):
            driver.execute_script("arguments[0].click();", botao_avancar)
            time.sleep(1)

    except Exception as e:    
        print(f"‚úî Passando para o pr√≥ximo colaborador: {nome}")
        continue  # Avan√ßa para o pr√≥ximo colaborador
